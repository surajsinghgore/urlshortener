import Footer from '../components/Footer'
import Head from 'next/head'
import {  useToasts } from 'react-toast-notifications';
const URL='https://urlshortener-production-4187.up.railway.app/';
import Header from '../components/Header'
import { useEffect, useState } from 'react'
export default function Home() {
 const { addToast } = useToasts()
const [input,setInput]=useState()
const [sortId,setSortID]=useState(undefined)
const [redirectUrl,setRedirectUrl]=useState(undefined);
const [clickCount,setClickCount]=useState(undefined);
// url short
const shortUrl=async()=>{

let res=await fetch('https://urlshortener-production-4187.up.railway.app/api/URLPOST',{
method:"POST",
headers:{"Content-Type": "application/json"},
body:JSON.stringify({url:input})
})
let data=await res.json();
// error
if(res.status==500){

addToast(data.message, {
      appearance: 'error',
      autoDismiss: true,
    })
}
// 400
else if(res.status==400){

addToast(data.message, {
      appearance: 'warning',
      autoDismiss: true,
    })
}
else{
sessionStorage.setItem('shortId',`${URL}${data.data.shortId}`)
sessionStorage.setItem('redirectURL',data.data.redirectURL)
setRedirectUrl(data.data.redirectURL)
sessionStorage.setItem('ClickLength',data.data.Clicks.length)
setClickCount(data.data.Clicks.length)
setSortID(`${URL}${data.data.shortId}`)
setInput(`${URL}${data.data.shortId}`)
addToast(data.message, {
      appearance: 'success',
      autoDismiss: true,
    })

}
}

const copyURL=()=>{

 navigator.clipboard.writeText(sortId);
 addToast('Successfully Copy to clipboard', {
      appearance: 'success',
      autoDismiss: true,
    })
}

// new url short
const newURLShort=()=>{
sessionStorage.removeItem('shortId')
sessionStorage.removeItem('redirectURL')
sessionStorage.removeItem('ClickLength')
setInput('')
setSortID(undefined)
addToast('Reset Successfully', {
      appearance: 'error',
      autoDismiss: true,
    })
}
// fetching data on re-load page
useEffect(()=>{
setSortID(sessionStorage.getItem('shortId'))
if(sessionStorage.getItem('shortId')){
setInput(sessionStorage.getItem('shortId'))
setRedirectUrl(sessionStorage.getItem('redirectURL'))
setClickCount(sessionStorage.getItem('ClickLength'))
}

},[])

  return (
    <>
      <Head>
        <title>URL SHORTENER</title>
        <meta name="description" content="Generated by URL SHORTENER" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
 <Header />

<div className='fullContainer'>
{(sortId==undefined)?<div className="paste">
<h2>Paste the URL to be shortened</h2>
<div className="pasteInput">

<input type="text" placeholder='Enter the link here' value={input} onChange={(e)=>setInput(e.target.value)}/>
<button onClick={shortUrl}>Shorten URL</button>
</div>
<p className='desc'>ShortURL is a free service to shorten URLs and create short links
Our URL shortener allows to generate a shortened link making it easy to remember</p>
</div>:
// copy to clip boad
<div className="paste">
<h2>Your shortened URL</h2>
<div className="pasteInput">

<input type="text" placeholder='Enter the link here' value={input} onChange={(e)=>setInput(e.target.value)}/>
<button onClick={copyURL}>COPY URL</button>
</div>

<p className='long'>Long URL: <span className='link'><a href={redirectUrl} target="_blank" onClick={shortUrl}>{redirectUrl}</a></span></p>

<h6>Total Clicks On this URL : <span className="click">{clickCount}</span></h6>

<button id="shortAnother" onClick={newURLShort}>Short Another URL</button>
</div>
}


</div>
<Footer />

    </>
  )
}
